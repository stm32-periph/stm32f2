/**
  @page ADC_VBAT_Measurement ADC_VBAT_Measurement

  @verbatim
  ******************** (C) COPYRIGHT 2011 STMicroelectronics *******************
  * @file    ADC/VBAT_Measurement/readme.txt
  * @author  MCD Application Team
  * @version V1.0.0
  * @date    18-April-2011
  * @brief   Description of the ADC1 VBAT Measurement example.
  ******************************************************************************
  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  ******************************************************************************
   @endverbatim

@par Example Description 

This example describes how to measure VBAT voltage using ADC1 regular channel 18.
In fact, the measured value correspond to VBAT/2; as the VBAT voltage could be higher
than VDDA, to ensure the correct operation of the ADC, the VBAT pin is internally
connected to a bridge divider by 2.

In this example the VBAT/2 voltage is continuously converted, each time an end
of conversion occurs the DMA transfers, in circular mode, the converted data from 
ADC1 DR register to the ADCConvertedValue variable.  
However, in real application to prevent any unwanted consumption on the battery,
it is recommended to enable the bridge divider only when needed for ADC
conversion then disable it.

User can display the VBAT voltage on the Eval Board LCD (when the define PRINT_ON_LCD
is enabled in main.c)

In this example, the system clock is 120MHz, APB2 =60MHz and ADC clock = APB2 /2.
So ADCCLK= 30MHz 

Conversion rate of Vbat channel  = Sampling Time + Conversion Time = 15 + 12 cycles
                                 = 27 cycles ==> Conversion Time = 30MHz/27cyc = 1.11Msps.


@par Directory contents 

  - ADC/VBAT_Measurement/system_stm32f2xx.c   STM32F2xx system clock configuration file 
  - ADC/VBAT_Measurement/stm32f2xx_conf.h     Library Configuration file
  - ADC/VBAT_Measurement/stm32f2xx_it.c       Interrupt handlers
  - ADC/VBAT_Measurement/stm32f2xx_it.h       Interrupt handlers header file
  - ADC/VBAT_Measurement/main.c               Main program

@note The "system_stm32f2xx.c" is generated by an automatic clock configuration
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F2xx_Clock_Configuration_V1.0.0.xls" tool.


@par Hardware and Software environment 

  - This example runs on STM32F2xx Devices.

  - This example has been tested with STM322xG-EVAL RevB and can be easily tailored
    to any other development board


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F2xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

 * <h3><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h3>
 */

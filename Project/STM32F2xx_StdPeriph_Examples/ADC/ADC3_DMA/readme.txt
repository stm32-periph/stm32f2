/**
  @page ADC_ADC3_DMA ADC3 conversion using DMA for Data transfer

  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    ADC/ADC3_DMA/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0
  * @date    31-December-2021
  * @brief   Description of the ADC3 DMA example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2012 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example describes how to use the ADC3 and DMA to transfer continuously 
converted data from ADC3 to memory.
The ADC3 is configured to convert continuously channel7.
Each time an end of conversion occurs the DMA transfers, in circular mode, the
converted data from ADC3 DR register to the ADC3ConvertedValue variable.

In this example, the system clock is 120MHz, APB2 =60MHz and ADC clock = APB2 /2. 
Since ADC3 clock is 30 MHz and sampling time is set to 3 cycles, the total 
conversion time is 0.5 us (2Msps).

User can vary the ADC3 channel7 voltage using the Eval Board potentiometer
The converted voltage is displayed on the Eval Board LCD (when the define PRINT_ON_LCD
is enabled in main.c)


@par Directory contents 

  - ADC/ADC3_DMA/system_stm32f2xx.c   STM32F2xx system clock configuration file
  - ADC/ADC3_DMA/stm32f2xx_conf.h     Library Configuration file
  - ADC/ADC3_DMA/stm32f2xx_it.c       Interrupt handlers
  - ADC/ADC3_DMA/stm32f2xx_it.h       Interrupt handlers header file
  - ADC/ADC3_DMA/main.c               Main program

@note The "system_stm32f2xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F2xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3362 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

@par Hardware and Software environment 

  - This example runs on STM32F2xx Devices.
  
  - This example has been tested with STM322xG-EVAL RevB and can be easily tailored
    to any other development board.

  - STM322xG-EVAL Set-up
    - Use the Potentiometer (RV1) of the Eval board (connected to PF.09). 


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F2xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example


 */



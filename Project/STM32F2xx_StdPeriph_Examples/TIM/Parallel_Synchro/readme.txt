/**
  @page TIM_Parallel_Synchro TIM Parallel Synchro example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    TIM/Parallel_Synchro/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0
  * @date    31-December-2021
  * @brief   Description of the TIM Parallel Synchro example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2012 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to synchronize TIM peripherals in parallel mode.
In this example three timers are used:

Timers synchronisation in parallel mode:

1/TIM2 is configured as Master Timer:
   - PWM Mode is used
   - The TIM2 Update event is used as Trigger Output 
 
2/TIM3 and TIM4 are slaves for TIM2,
   - PWM Mode is used
   - The ITR1(TIM2) is used as input trigger for both slaves 
   - Gated mode is used, so starts and stops of slaves counters are controlled 
     by the Master trigger output signal(update event).

The TIM2 counter clock is 60 MHz.
  
  The Master Timer TIM2 is running at TIM2 frequency:
  TIM2 frequency = TIM2 counter clock/ (TIM2 period + 1) = 234.375 KHz 
  and the duty cycle is equal to TIM2_CCR1/(TIM2_ARR + 1) = 25%.

  The TIM3 is running at:
  (TIM2 frequency)/ (TIM3 period + 1) = 23.437 KHz and a duty cycle equal to 
  TIM3_CCR1/(TIM3_ARR + 1) = 30%

  The TIM4 is running at:
  (TIM2 frequency)/ (TIM4 period + 1) = 46.875 KHz and a duty cycle equal to 
  TIM4_CCR1/(TIM4_ARR + 1) = 60%
  
@par Directory contents 

  - TIM/Parallel_Synchro/stm32f2xx_conf.h    Library Configuration file
  - TIM/Parallel_Synchro/stm32f2xx_it.c      Interrupt handlers
  - TIM/Parallel_Synchro/stm32f2xx_it.h      Interrupt handlers header file
  - TIM/Parallel_Synchro/main.c              Main program
  - TIM/Parallel_Synchro/system_stm32f2xx.c  STM32F2xx system source file

@note The "system_stm32f2xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F2xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3362 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
   
@par Hardware and Software environment 

  - This example runs on STM32F2xx Devices.
  
  - This example has been tested with STM322xG-EVAL RevB and can be easily tailored
    to any other development board.

  - STM322xG-EVAL Set-up 
    - Connect the pins to an oscilloscope to monitor the different waveforms:
      - TIM2 CH1 (PA.00)
      - TIM3 CH1 (PC.06) 
      - TIM4 CH1 (PB.06) 
  
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F2xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
   

 */



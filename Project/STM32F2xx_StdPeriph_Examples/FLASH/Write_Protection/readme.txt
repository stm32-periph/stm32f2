/**
  @page FLASH_Write_Protection FLASH_Write_Protection
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    FLASH/Write_Protection/readme.txt 
  * @author  MCD Application Team
  * @version V1.2.0
  * @date    31-December-2021
  * @brief   Description of the FLASH Write Protection example.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2012 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a description of how to enable and disable the write protection
for the STM32F2xx FLASH.

By maintaining the Key push-button pressed at Reset, the program will check the 
write protection status of FLASH_WRP_SECTORS (defined in main.c) 
  - If FLASH_WRP_SECTORS are write protected, the write protection will be disabled.
    Then LED1 will turn ON, if the protection disable operation is done correctly,
    otherwise LED3 turns ON.
  - If FLASH_WRP_SECTORS are not write protected, the write protection will be enabled.
    Then LED4 will turn ON, if the protection enable operation is done correctly,
    otherwise LED3 turns ON.

If after reset the Key push-button is not pressed, the program will simply turn ON LED2. 


@par Directory contents 

  - FLASH/Write_Protection/system_stm32f2xx.c   STM32F2xx system clock configuration file
  - FLASH/Write_Protection/stm32f2xx_conf.h     Library Configuration file
  - FLASH/Write_Protection/stm32f2xx_it.c       Interrupt handlers
  - FLASH/Write_Protection/stm32f2xx_it.h       Header for stm32f2xx_it.c
  - FLASH/Write_Protection/main.c               Main program

  
@note The "system_stm32f2xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F2xx_Clock_Configuration_V1.0.0.xls" 
      provided with the AN3362 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

      
@par Hardware and Software environment 

  - This example runs on STM32F2xx Devices.
  
  - This example has been tested with STM322xG-EVAL RevB and can be easily tailored
    to any other development board

  - STM322xG-EVAL Set-up  
    - Use LED1, LED2, LED3 and LED4 connected respectively to PG.06, PG.08, PI.09
      and PC.07 pins
    - Use the Key push-button connected to pin PG15 (EXTI Line15)
    
      
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F2xx_StdPeriph_Template
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
    

 */


